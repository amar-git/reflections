# Lesson 3 reflections

Q.  When would you want to create a remote repository rather than keeping all your work local?
A.  There are many benefits of creating remote repository rather than keeping all the work
    local. First of all we can access it from any computer, rather than worring about keeping
    the work in a thumbdrive or so. Anyone who's working on the project can access the repository
    remotely and contribute the changes to it. If we're working locally, even then it's very easy
    to push the changes with recent commits to the remote repository.

Q.	Why might you want to always pull changes manually rather than having Git
	automatically stay up-to-date with your remote repository?
A.	Pulling changes manually gives a better control over using network connection
	to get this done. Setting it automatically may not work if there are any 
	network issues. This can also be the case, when there're actually no changes
	being made over GitHub repository, while Git is constantly try to update it.
	So we can avoid the unneccessory network access.

Q.	Describe the differences between forks, clones, and branches. When would you use
	one instead of another?
A.	Forks are used to create a clone of any repository (public) on GitHub to own
	GitHub repositories.
	Clone is used to make a copy of repositories on the local working directory from
	a GitHub repository.
	Branches are created in a Git repository in order to work on a separate feature
	without making any breakable changes in the master branch. Branches can be created in both places, whether it's a Git or GitHub repository.
	When we want to create a copy on an online GitHub repository to another GitHub
	account, we'll Fork it; if we want to create a copy of it on a local machine,
	we'll clone it. At the time when we require to add some feature do some experiments on the existing project, we can use brach to achieve the same.